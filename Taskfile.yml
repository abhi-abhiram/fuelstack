# yaml-language-server: $schema = https://taskfile.dev/schema.json

version: '3'

vars:
  APP_VERSION: '{{.APP_VERSION | default "1.0.0"}}'
  CONCURRENCY: '{{.CONCURRENCY | default "20"}}'
  GIT_SHA: { sh: git rev-parse --short HEAD }
  ROOT_DIR: { sh: pwd }

tasks:
  prepare:
    cmds: ['docker-compose -f docker-compose.yml up -d']

  cleanup:
    cmds: ['docker-compose down --remove-orphans', 'pnpm turbo clean']

  dev:api:
    desc: Start development Fastify API
    cmds: ['pnpm turbo dev --no-cache --continue --concurrency={{.CONCURRENCY}} --filter=api...']

  dev:admin:
    desc: Start development Admin (including API)
    cmds:
      [
        'pnpm turbo dev --no-cache --continue --concurrency={{.CONCURRENCY}} --filter={api,admin}...',
      ]

  dev:website:
    desc: Start development Website (including API)
    cmds:
      [
        'pnpm turbo dev --no-cache --continue --concurrency={{.CONCURRENCY}} --filter={api,website}...',
      ]

  db:introspect:
    cmds: ['pnpm turbo db:introspect --no-cache --filter=@acme/database']

  db:migrate:
    cmds: ['pnpm turbo db:migrate --no-cache --filter=@acme/database']

  db:generate:
    cmds: ['pnpm turbo db:generate --no-cache --filter=@acme/database']

  db:check:
    cmds: ['pnpm turbo db:check --no-cache --filter=@acme/database']

  db:up:
    cmds: ['pnpm turbo db:up --no-cache --filter=@acme/database']

  db:drop:
    cmds: ['pnpm turbo db:drop --no-cache --filter=@acme/database']
